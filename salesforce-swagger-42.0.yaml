swagger: '2.0'
info: {title: Salesforce Connect API, description: '', version: 42.0-2018.10.30.10.45}
schemes: [https]
produces: [application/json]
basePath: /services/data/v42.0
paths:
  /iot/contexts:
    get:
      description: List all contexts that have been defined in your org.
      parameters:
      - {description: For internal use only., in: query, name: page, type: string}
      - {description: 'The number of contexts returned per page. When one page is
          returned, it contains the URL in the nextPageUrl property that you use to
          get the next page of results.', in: query, name: pageSize, type: integer}
      - description: The Salesforce IoT runtime used.
        enum: [HighVolume, Standard]
        in: query
        name: runtime
        type: string
      - description: Sorting direction, either ascending or descending.
        enum: [ContextLabel, Label, LastModified, Status]
        in: query
        name: sort
        type: string
      - description: Field name to be sorted.
        enum: [Ascending, Descending]
        in: query
        name: sortDirection
        type: string
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/ContextCollectionRepresentation'}
    post:
      description: Creates a context.
      parameters:
      - description: Context definition
        in: body
        name: contextInput
        schema: {$ref: '#/definitions/ContextInputRepresentation'}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/ContextDetailRepresentation'}
  /iot/contexts/{contextId}:
    delete:
      description: Delete the specified context.
      parameters:
      - {description: ID of the context to update., in: path, name: contextId, required: true,
        type: string}
      responses:
        '200': {description: Success}
    get:
      description: Get the specified context.
      parameters:
      - {description: ID of the context to update., in: path, name: contextId, required: true,
        type: string}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/ContextDetailRepresentation'}
    put:
      description: Update the designated context using the full context definition specified.
      parameters:
      - {description: ID of the context to update., in: path, name: contextId, required: true,
        type: string}
      - description: Full context definition to replace previous context.
        in: body
        name: contextInput
        schema: {$ref: '#/definitions/ContextInputRepresentation'}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/ContextDetailRepresentation'}
  /iot/orchestrations:
    get:
      description: Get a list of Salesforce IoT orchestrations.
      parameters:
      - {description: ID of the context to retrieve., in: query, name: contextId,
        type: string}
      - {description: For internal use only., in: query, name: page, type: string}
      - {description: 'The number of contexts returned per page. When one page is
          returned, it contains the URL in the nextPageUrl property that you use to
          get the next page of contexts.', in: query, name: pageSize, type: integer}
      - description: The Salesforce IoT runtime used.
        enum: [HighVolume, Standard]
        in: query
        name: runtime
        type: string
      - description: Sorting direction, either ascending or descending.
        enum: [ContextLabel, Label, LastModified, Status]
        in: query
        name: sort
        type: string
      - description: Field name to be sorted.
        enum: [Ascending, Descending]
        in: query
        name: sortDirection
        type: string
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationCollectionRepresentation'}
    post:
      description: Create an IoT orchestration.
      parameters:
      - description: Orchestration definition.
        in: body
        name: OrchestrationInput
        schema: {$ref: '#/definitions/OrchestrationInputRepresentation'}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationDetailRepresentation'}
  /iot/orchestrations/{orchestrationId}:
    delete:
      description: Delete the orchestration with the specified ID.
      parameters:
      - {description: ID of the orchestration to retrieve., in: path, name: orchestrationId,
        required: true, type: string}
      responses:
        '200': {description: Success}
    get:
      description: Get the orchestration for the designated ID.
      parameters:
      - {description: ID of the orchestration to retrieve., in: path, name: orchestrationId,
        required: true, type: string}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationDetailRepresentation'}
    put:
      description: Update the specified orchestration using the full orchestration definition.
      parameters:
      - {description: ID of the orchestration to retrieve., in: path, name: orchestrationId,
        required: true, type: string}
      - description: The full orchestration definition with which to replace the current orchestration.
        in: body
        name: orchestrationInput
        schema: {$ref: '#/definitions/OrchestrationInputRepresentation'}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationDetailRepresentation'}
  /iot/orchestrations/{orchestrationId}/activations:
    get:
      description: Get the activation history for the specified orchestration. The activations are sorted by creation date in descending order.
      parameters:
      - {description: ID of the orchestration for which to get the activation history.,
        in: path, name: orchestrationId, required: true, type: string}
      - {description: For internal use only., in: query, name: page, type: string}
      - {description: 'The number of activations returned per page. When a page of
          the response is returned, it contains the nextPageUrl property which is
          the URL that you use to get the next page of results.', in: query, name: pageSize,
        type: integer}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationActivationCollectionRepresentation'}
    post:
      description: Activate the specified orchestration, optionally using activation options.
      parameters:
      - {description: ID of the orchestration for which to get the activation history.,
        in: path, name: orchestrationId, required: true, type: string}
      - description: Optional activation options. Otherwise, an empty body ({}).
        in: body
        name: activationInput
        schema: {$ref: '#/definitions/OrchestrationActivationInputRepresentation'}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationActivationDetailRepresentation'}
  /iot/orchestrations/{orchestrationId}/activations/last:
    get:
      description: Get the orchestration activation that was most recently created for this orchestration ID.
      parameters:
      - {description: ID of the orchestration to deactivate., in: path, name: orchestrationId,
        required: true, type: string}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationActivationDetailRepresentation'}
    patch:
      description: Deactivate the specified orchestration. Use only to deactivate an active orchestration.
      parameters:
      - {description: ID of the orchestration to deactivate., in: path, name: orchestrationId,
        required: true, type: string}
      - description: The body must include the status property with a value of Inactive. Optionally, you can specify whether to delete running orchestration instances by including the resetInstancesOnActivation option.
        in: body
        name: activationInput
        schema: {$ref: '#/definitions/OrchestrationActivationInputRepresentation'}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationActivationDetailRepresentation'}
  /iot/orchestrations/{orchestrationId}/activations/{activationId}:
    get:
      description: Get activation information for the specified orchestration and activation.
      parameters:
      - {description: ID of the activation for which to get details., in: path, name: activationId,
        required: true, type: string}
      - {description: ID of the orchestration for which to get activation information.,
        in: path, name: orchestrationId, required: true, type: string}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationActivationDetailRepresentation'}
    patch:
      description: Deactivate the specified orchestration activation. No other updates are supported.
      parameters:
      - {description: ID of the activation for which to get details., in: path, name: activationId,
        required: true, type: string}
      - {description: ID of the orchestration for which to get activation information.,
        in: path, name: orchestrationId, required: true, type: string}
      - description: The body must include the status property with a value of Inactive. Optionally, you can specify whether to delete running orchestration instances by including the resetInstancesOnActivation option.
        in: body
        name: activationInput
        schema: {$ref: '#/definitions/OrchestrationActivationInputRepresentation'}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationActivationDetailRepresentation'}
  /iot/orchestrations/{orchestrationId}/instances/{instanceKey}:
    delete:
      description: Delete the orchestration instance corresponding to the specified orchestration and instance key.
      parameters:
      - {description: The orchestration instance key. The instanceKey is the value of the event key field.,
        in: path, name: instanceKey, required: true, type: string}
      - {description: The orchestration instance ID., in: path, name: orchestrationId,
        required: true, type: string}
      responses:
        '200': {description: Success}
    get:
      description: Get the orchestration instance corresponding to the specified orchestration and instance key.
      parameters:
      - {description: The orchestration instance key. The instanceKey is the value of the event key field.,
        in: path, name: instanceKey, required: true, type: string}
      - {description: The orchestration instance ID., in: path, name: orchestrationId,
        required: true, type: string}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationInstanceDetailRepresentation'}
  /iot/orchestrations/{orchestrationId}/metrics/transitions:
    get:
      description: Get state transition counts for the specified orchestration.
      parameters:
      - {description: ID of the orchestration to get transition counts for., in: path,
        name: orchestrationId, required: true, type: string}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationTransitionCountCollectionRepresentation'}
  /iot/usage:
    get:
      description: Get the current org-level usage and allocations.
      parameters: []
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/UsageDetailRepresentation'}
  /iot/usage/orchestration-usage:
    get:
      description: Get usage data for each orchestration in the org, including the number of instances, and the number of processed events per orchestration.
      parameters:
      - {description: For internal use only., in: query, name: page, type: string}
      - {description: 'The number of items returned per page. When one page is returned,
          it contains the URL in the nextPageUrl property that you use to get the
          next page of results.', in: query, name: pageSize, type: integer}
      responses:
        '200':
          description: Success
          schema: {$ref: '#/definitions/OrchestrationUsageCollectionRepresentation'}
definitions:
  AbstractBaseResourceRepresentation:
    type: object
    description: A representation for an IoT Resource. Eg. OrchestrationInstance
    properties:
      createdDate: {description: The date on which the resource was created., type: string}
      description: {description: The resource description., type: string}
      id: {description: The 18-character ID of the resource., type: string}
      label: {description: The resource label., type: string}
      lastModifiedDate: {description: The date on which this resource was last edited.,
        type: string}
      name: {description: The resource name., type: string}
      namespace: {description: The namespace that this resource belongs to., type: string}
      url: {description: The URL of this resource., type: string}
  AbstractCollectionRepresentation:
    type: object
    description: Information about the items in the list.
    properties:
      nextPageUrl: {description: URL to get the next page of contents in the list.,
        type: string}
      totalSize: {description: 'The total number of items in the list., irrespective
          of the page.', type: integer}
      url: {description: URL for the list., type: string}
  AbstractContextActivationRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractResourceRepresentation'}
    - type: object
      description: A list of context activation resources.
      properties: {}
  AbstractContextRepresentation:
    type: object
    description: A list of the properties for this context.
    properties:
      createdBy: {description: The user who created this context., $ref: '#/definitions/IoTReferenceRepresentation'}
      createdDate: {description: The date on which the context was created., type: string}
      description: {description: The context description., type: string}
      id: {description: The 18-character ID of this context., type: string}
      label: {description: Context label., type: string}
      lastModifiedBy: {description: The user who last edited this context., $ref: '#/definitions/IoTReferenceRepresentation'}
      lastModifiedDate: {description: The date on which this context was last edited.,
        type: string}
      name: {description: The context name., type: string}
      namespace: {description: The namespace that this context belongs to., type: string}
      runtime:
        description: The runtime type of this context.
        type: string
        enum: [HighVolume, Standard]
      url: {description: The URL of this context., type: string}
  AbstractOrchestrationActivationRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractResourceRepresentation'}
    - type: object
      description: A list of orchestration activation resources.
      properties: {}
  AbstractOrchestrationDatasetRepresentation:
    type: object
    description: Information about the Salesforce IoT orchestration dataset, including name, label and URL.
    properties: {}
  AbstractOrchestrationInstanceRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractBaseResourceRepresentation'}
    - type: object
      description: A list of orchestration instance resources.
      properties:
        createdBy: {description: The User that created this resource., $ref: '#/definitions/IoTReferenceRepresentation'}
        lastModifiedBy: {description: The User that last edited this resource., $ref: '#/definitions/IoTReferenceRepresentation'}
  AbstractOrchestrationRepresentation:
    type: object
    description: A list of orchestration resources.
    properties:
      createdBy: {description: The user who created this resource., $ref: '#/definitions/IoTReferenceRepresentation'}
      createdDate: {description: The date on which the resource was created., type: string}
      id: {description: The 18-character ID of this resource., type: string}
      label: {description: The label for this resource., type: string}
      lastModifiedBy: {description: The user who last edited this resource., $ref: '#/definitions/IoTReferenceRepresentation'}
      lastModifiedDate: {description: The date on which this resource was last edited.,
        type: string}
      name: {description: The name of this resource., type: string}
      namespace: {description: The namespace that this resource belongs to., type: string}
      orchestrationContext: {description: The context of this resource., $ref: '#/definitions/ContextReferenceRepresentation'}
      status:
        description: The activation status of this orchestration.
        type: string
        enum: [Activating, Active, Deactivating, Error, Inactive, Unknown]
      url: {description: The URL of this resource., type: string}
  AbstractOrchestrationStateRepresentation:
    type: object
    description: A reference to an orchestration state.
    properties:
      id: {description: The numeric value that identifies the state., type: integer}
      name: {description: The name of the state., type: string}
  AbstractResourceRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractBaseResourceRepresentation'}
    - type: object
      description: A representation for a Salesforce IoT resource, such as OrchestrationInstance.
      properties:
        createdBy: {description: The user who created this resource., $ref: '#/definitions/IoTReferenceRepresentation'}
        lastModifiedBy: {description: The user who last edited this resource., $ref: '#/definitions/IoTReferenceRepresentation'}
  ActivityInfoRepresentation:
    type: object
    description: Activity info marker
    properties: {}
  ActivityLogCollectionRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractCollectionRepresentation'}
    - type: object
      description: A list of activity logs.
      properties: {}
  ActivityLogRepresentation:
    type: object
    description: Activity log details.
    properties: {}
  ActivityLogSourceRepresentation:
    type: object
    description: Activity log source details.
    properties: {}
  AllocationCountRepresentation:
    type: object
    description: An org-level allocation count.
    properties:
      count: {description: Value of the allocation count., type: integer, format: int64}
      description: {description: Allocation description., type: string}
  AllocationsRepresentation:
    type: object
    description: Org-level allocations for the number of events that can be processed.
    properties:
      eventAllocation: {description: Allocation for maximum number of events that can be processed by orchestrations in an org.,
        $ref: '#/definitions/AllocationCountRepresentation'}
      instanceAllocation: {description: Allocation for maximum number of instances per orchestration.,
        $ref: '#/definitions/AllocationCountRepresentation'}
  ContextActivationCollectionRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractCollectionRepresentation'}
    - type: object
      description: A list of Salesforce IoT context activations.
      properties: {}
  ContextActivationDetailRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractContextActivationRepresentation'}
    - type: object
      description: Context activation information.
      properties: {}
  ContextActivationInputRepresentation:
    type: object
    description: An input representation of a context activation.
    properties: {}
  ContextActivationOptionsInputRepresentation:
    type: object
    description: The options for this context activation.
    properties: {}
  ContextActivationOrchestrationResultRepresentation:
    type: object
    description: Details about a context activation orchestration result.
    properties: {}
  ContextActivationResultRepresentation:
    type: object
    description: Information about the context activation result.
    properties: {}
  ContextActivationSummaryRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractContextActivationRepresentation'}
    - type: object
      description: Information about the context activation, including activation status.
      properties: {}
  ContextCollectionRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractCollectionRepresentation'}
    - type: object
      description: A list of Salesforce IoT contexts.
      properties:
        contexts:
          description: A list of Salesforce IoT contexts.
          type: array
          items: {$ref: '#/definitions/ContextSummaryRepresentation'}
  ContextDefinitionRepresentation:
    type: object
    description: The context definition.
    properties: {}
  ContextDetailRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractContextRepresentation'}
    - type: object
      description: Information about the orchestration context.
      properties:
        events:
          description: The events for this orchestration context.
          type: array
          items: {$ref: '#/definitions/OrchestrationEventTypeRepresentation'}
        orchestrationsUrl: {description: The URL of orchestrations using this context.,
          type: string}
        referenceData:
          description: The reference data for this orchestration context.
          type: array
          items: {$ref: '#/definitions/OrchestrationContextDatasetRepresentation'}
  ContextInputRepresentation:
    type: object
    description: An input representation of a context.
    properties:
      description: {description: The description of this context., type: string}
      events:
        description: The events used by this context.
        type: array
        items: {type: object}
      label: {description: Context label., type: string}
      name: {description: Context name., type: string}
      referenceData:
        description: The datasets that are referenced by this context.
        type: array
        items: {type: object}
      runtime:
        description: The runtime for this context.
        type: string
        enum: [HighVolume, Standard]
  ContextReferenceInputRepresentation:
    type: object
    description: Specification for a context reference.
    properties:
      name: {description: Context name., type: string}
      namespace: {description: The namespace of the context., type: string}
  ContextReferenceRepresentation:
    type: object
    description: The context referenced by this orchestration.
    properties:
      id: {description: Context API name., type: string}
      label: {description: Context label., type: string}
      name: {description: Context name., type: string}
      namespace: {description: The namespace that the context resides in., type: string}
      runtime:
        description: The runtime type of the context.
        type: string
        enum: [HighVolume, Standard]
      url: {description: The URL of the context resource., type: string}
  ContextSummaryRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractContextRepresentation'}
    - type: object
      description: Summarized information about an orchestration context.
      properties: {}
  ContextValidationMessageRepresentation:
    type: object
    description: A message generated when validating the context definition.
    properties: {}
  ContextValidationMessagesRepresentation:
    type: object
    description: A list of messages generated while validating the context definition.
    properties: {}
  DatasetReferenceInputRepresentation:
    type: object
    description: Specification for a dataset reference.
    properties:
      name: {description: Dataset name., type: string}
      namespace: {description: The namespace of the dataset., type: string}
      type:
        description: Dataset type.
        type: string
        enum: [SalesforceObjectReference, Wave]
  DatasetReferenceRepresentation:
    type: object
    description: A dataset that is referenced from an orchestration context.
    properties:
      id: {description: Dataset API name., type: string}
      label: {description: Dataset label., type: string}
      name: {description: Dataset name., type: string}
      namespace: {description: The namespace that the dataset resides in., type: string}
      type:
        description: Dataset reference type.
        type: string
        enum: [SalesforceObjectReference, Wave]
  DependenciesRepresentation:
    type: object
    description: The object dependencies.
    properties:
      orchestrationsUrl: {description: The URL of the orchestrations with the specified context ID.,
        type: string}
  ErrorRepresentation:
    type: object
    description: A generic representation for an error with a message and severity.
    properties: {}
  EventTypeReferenceInputRepresentation:
    type: object
    description: Information about the event.
    properties:
      name: {description: Event name., type: string}
      namespace: {description: The namespace of the event., type: string}
      type:
        description: Event type.
        type: string
        enum: [OrchestrationEvent, PlatformEvent]
  EventTypeReferenceRepresentation:
    type: object
    description: Information about the event, such as the ID, event name, and label.
    properties:
      id: {description: Event ID., type: string}
      label: {description: Event label., type: string}
      name: {description: Event name., type: string}
      namespace: {description: The namespace that the event resides in., type: string}
      properties:
        description: Event properties.
        type: object
        additionalProperties: {type: string}
      type:
        description: Event type.
        type: string
        enum: [OrchestrationEvent, PlatformEvent]
  EventUsageRepresentation:
    type: object
    description: Current org-level event usage.
    properties:
      processedEventCount: {description: Number of events processed in the last 24 hours.,
        type: integer, format: int64}
      rejectedEventCount: {description: Number of events rejected in the last 24 hours.,
        type: integer, format: int64}
  FileAssetRepresentation:
    type: object
    description: URL information for a file asset.
    properties: {}
  IoTReferenceRepresentation:
    type: object
    description: Information about an object, such as name, ID and resource URL.
    properties:
      id: {description: The 18-character ID of this object., type: string}
      label: {description: Object label., type: string}
      name: {description: Object name., type: string}
      namespace: {description: The namespace that the object belongs to., type: string}
      url: {description: The URL of the resource representing this object., type: string}
  MetadataActivityInfoRepresentation:
    allOf:
    - {$ref: '#/definitions/ActivityInfoRepresentation'}
    - type: object
      description: URL information for the context or orchestration.
      properties: {}
  NotificationActivityInfoRepresentation:
    allOf:
    - {$ref: '#/definitions/ActivityInfoRepresentation'}
    - type: object
      description: Email notification information.
      properties: {}
  OrchestrationActionInputRepresentation:
    type: object
    description: A list of actions to execute, such as assigning a variable value or creating a Salesforce record, when a condition is met.
    properties:
      type:
        description: Action type.
        type: string
        enum: [AssignVariable, ChangeState, ResetVariable, SalesforceOutputAction,
          Terminate]
  OrchestrationActionRepresentation:
    type: object
    description: The action types executed when the conditions of a rule are met.
    properties:
      type:
        description: Action type.
        type: string
        enum: [AssignVariable, ChangeState, ResetVariable, SalesforceOutputAction,
          Terminate]
  OrchestrationActivationCollectionRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractCollectionRepresentation'}
    - type: object
      description: A list of Salesforce IoT orchestration activations.
      properties:
        activations:
          description: A list of Salesforce IoT orchestration activations.
          type: array
          items: {$ref: '#/definitions/OrchestrationActivationSummaryRepresentation'}
  OrchestrationActivationDetailRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractOrchestrationActivationRepresentation'}
    - type: object
      description: Orchestration activation information, including activation status and URLs of related orchestration resources.
      properties:
        definition: {description: The orchestration activation definition., $ref: '#/definitions/OrchestrationDefinitionRepresentation'}
        options: {description: The orchestration activation options., $ref: '#/definitions/OrchestrationActivationOptionsRepresentation'}
        orchestrationUrl: {description: The URL of the related orchestration resource.,
          type: string}
        status:
          description: The status of the orchestration activation resource.
          type: string
          enum: [Activating, Active, Deactivating, Error, Inactive, Unknown]
  OrchestrationActivationInputRepresentation:
    type: object
    description: An orchestration activation request.
    properties:
      options: {description: The orchestration activation options., type: object}
      status:
        description: The orchestration activation status.
        type: string
        enum: [Activating, Active, Deactivating, Error, Inactive, Unknown]
  OrchestrationActivationOptionsInputRepresentation:
    type: object
    description: Orchestration activation status information.
    properties:
      resetInstancesOnActivation: {description: Option to delete all existing instances in the current orchestration during activation.,
        type: boolean}
  OrchestrationActivationOptionsRepresentation:
    type: object
    description: The orchestration activation options.
    properties:
      resetInstancesOnActivation: {description: Option to delete all existing instances in the current orchestration during activation.,
        type: boolean}
  OrchestrationActivationSummaryRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractOrchestrationActivationRepresentation'}
    - type: object
      description: Summary of information about orchestration activation.
      properties:
        status:
          description: Current orchestration activation status.
          type: string
          enum: [Activating, Active, Deactivating, Error, Inactive, Unknown]
  OrchestrationAssignVariableActionInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationActionInputRepresentation'}
    - type: object
      description: An orchestration action that assigns a value to a variable.
      properties:
        value: {description: The Salesforce expression that is used to assign the value to the variable.,
          type: string}
        variableId: {description: The variable ID., type: integer}
  OrchestrationAssignVariableActionRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationActionRepresentation'}
    - type: object
      description: An orchestration action that assigns a value to a variable.
      properties:
        value: {description: The Salesforce expression that assigns the value to the variable.,
          type: string}
        variableId: {description: The variable ID., type: integer}
  OrchestrationAvgAggregationVariableValueInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationTemporalAggregationVariableValueInputRepresentation'}
    - type: object
      description: An orchestration variable value performing an average aggregation over time.
      properties: {}
  OrchestrationChangeStateActionInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationActionInputRepresentation'}
    - type: object
      description: An action that changes the state of an orchestration.
      properties:
        stateId: {description: The ID of the state to change the instance to., type: integer}
  OrchestrationChangeStateActionRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationActionRepresentation'}
    - type: object
      description: An action that changes the state of an orchestration.
      properties:
        stateId: {description: The ID of the state to change the instance to., type: integer}
  OrchestrationCollectionRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractCollectionRepresentation'}
    - type: object
      description: A list containing summary information of all orchestrations.
      properties:
        orchestrations:
          description: A list of all Salesforce IoT orchestrations.
          type: array
          items: {$ref: '#/definitions/OrchestrationSummaryRepresentation'}
  OrchestrationContextDatasetInputRepresentation:
    type: object
    description: The context dataset associated with the orchestration.
    properties:
      keyFields:
        description: The key fields used with the dataset.
        type: array
        items: {type: string}
      metadata: {description: The dataset metadata., type: object}
  OrchestrationContextDatasetRepresentation:
    type: object
    description: A reference and the associated key fields that relate an orchestration context to a dataset.
    properties:
      keyFields:
        description: The key fields that are used with the dataset reference.
        type: array
        items: {type: string}
      metadata: {description: The dataset metadata., $ref: '#/definitions/DatasetReferenceRepresentation'}
  OrchestrationContextRuntimeEventCollectionRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractCollectionRepresentation'}
    - type: object
      description: A list of Salesforce IoT orchestration context runtime events.
      properties: {}
  OrchestrationContextRuntimeEventRepresentation:
    type: object
    description: Information about an orchestration context event.
    properties: {}
  OrchestrationCountAggregationVariableValueInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationVariableValueInputRepresentation'}
    - type: object
      description: An action that terminates the orchestration.
      properties:
        temporalWindow: {description: The temporal window for the aggregation., type: string}
  OrchestrationCountAggregationVariableValueRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationVariableValueRepresentation'}
    - type: object
      description: An orchestration variable value using the count function.
      properties:
        temporalWindow: {description: The temporal window for the aggregation., type: string}
  OrchestrationCustomVariableValueInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationVariableValueInputRepresentation'}
    - type: object
      description: A custom Salesforce expression that is used to set a variable value.
      properties:
        formula: {description: 'The variable value, as a Salesforce expression.',
          type: string}
  OrchestrationCustomVariableValueRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationVariableValueRepresentation'}
    - type: object
      description: A custom Salesforce expression that is used to set a variable value.
      properties:
        formula: {description: 'The variable value, as a Salesforce expression.',
          type: string}
  OrchestrationDefinitionInputRepresentation:
    type: object
    description: The orchestration definition.
    properties:
      global: {description: 'The hyper state for the orchestration, containing global
          rule definitions.', type: object}
      properties: {description: The orchestration properties., type: object}
      states:
        description: The orchestration states.
        type: array
        items: {type: object}
      variables:
        description: The orchestration variables.
        type: array
        items: {type: object}
  OrchestrationDefinitionRepresentation:
    type: object
    description: The orchestration definition.
    properties:
      global: {description: 'The hyper state for the orchestration, containing global
          rule definitions.', $ref: '#/definitions/OrchestrationStateRepresentation'}
      properties: {description: The orchestration properties., $ref: '#/definitions/OrchestrationPropertiesRepresentation'}
      states:
        description: The orchestration states.
        type: array
        items: {$ref: '#/definitions/OrchestrationStateRepresentation'}
      variables:
        description: The orchestration variables.
        type: array
        items: {$ref: '#/definitions/OrchestrationVariableRepresentation'}
  OrchestrationDetailRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractOrchestrationRepresentation'}
    - type: object
      description: Detailed information about an orchestration.
      properties:
        definition: {description: The orchestration definition., $ref: '#/definitions/OrchestrationDefinitionRepresentation'}
        deletedStates:
          description: A list of deleted states that are still referenced by active orchestration instances.
          type: array
          items: {$ref: '#/definitions/OrchestrationStateReferenceRepresentation'}
        validationMessages: {description: A list of messages generated while validating the orchestration definition.,
          $ref: '#/definitions/OrchestrationValidationMessagesRepresentation'}
  OrchestrationEventFieldVariableValueInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationVariableValueInputRepresentation'}
    - type: object
      description: A variable value that specifies an event field.
      properties:
        eventField: {description: The event field for the variable., type: string}
  OrchestrationEventFieldVariableValueRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationVariableValueRepresentation'}
    - type: object
      description: A variable value that specifies an event field.
      properties:
        eventField: {description: The event field for the variable., type: string}
  OrchestrationEventTypeInputRepresentation:
    type: object
    description: Orchestration event specification.
    properties:
      keyFields:
        description: The key fields used with the event.
        type: array
        items: {type: string}
      metadata: {description: The event metadata., type: object}
  OrchestrationEventTypeRepresentation:
    type: object
    description: A reference and the associated key fields that relate an orchestration context to an event.
    properties:
      keyFields:
        description: The key fields that are used with the event reference.
        type: array
        items: {type: string}
      metadata: {description: The event metadata., $ref: '#/definitions/EventTypeReferenceRepresentation'}
  OrchestrationExtendedMetadataRepresentation:
    type: object
    description: Metadata about objects that are used by the orchestration definition.
    properties: {}
  OrchestrationInputRepresentation:
    type: object
    description: Input representation of an orchestration.
    properties:
      definition: {description: The orchestration definition., type: object}
      description: {description: The orchestration description., type: string}
      label: {description: The orchestration label., type: string}
      name: {description: The orchestration name., type: string}
      orchestrationContext: {description: The context that is referenced by this orchestration.,
        type: object}
  OrchestrationInstanceCollectionRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractCollectionRepresentation'}
    - type: object
      description: A list of Salesforce IoT orchestration instances.
      properties:
        instances:
          description: A list of Salesforce IoT orchestration instances.
          type: array
          items: {$ref: '#/definitions/OrchestrationInstanceSummaryRepresentation'}
  OrchestrationInstanceDetailCollectionRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractCollectionRepresentation'}
    - type: object
      description: A list of orchestration instances.
      properties: {}
  OrchestrationInstanceDetailRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractOrchestrationInstanceRepresentation'}
    - type: object
      description: Orchestration instance information.
      properties:
        instanceKey: {description: Instance key of the orchestration instance resource.,
          type: string}
        orchestrationId: {description: ID of the orchestration instance resource.,
          type: string}
        orchestrationState: {description: Orchestration state the orchestration instance is currently in.,
          $ref: '#/definitions/OrchestrationInstanceStateRepresentation'}
        variables:
          description: List of variables that are part of the orchestration instance resource.
          type: array
          items: {$ref: '#/definitions/VariableRepresentation'}
  OrchestrationInstanceStateRepresentation:
    type: object
    description: A reference to a state of an orchestration instance.
    properties:
      id: {description: The 18-character ID of this object., type: string}
      label: {description: The object label., type: string}
  OrchestrationInstanceSummaryRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractOrchestrationInstanceRepresentation'}
    - type: object
      description: Orchestration instance summary information.
      properties: {}
  OrchestrationLogBeginEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log begin event.
      properties: {}
  OrchestrationLogEndEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log end event.
      properties: {}
  OrchestrationLogErrorEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log error event.
      properties: {}
  OrchestrationLogEventCollectionRepresentation:
    type: object
    description: A list of orchestration log events.
    properties: {}
  OrchestrationLogEventRepresentation:
    type: object
    description: Orchestration log event.
    properties: {}
  OrchestrationLogFullStateEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log full state event.
      properties: {}
  OrchestrationLogInfoEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log info event.
      properties: {}
  OrchestrationLogInputEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log input event.
      properties: {}
  OrchestrationLogOutputEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log output event.
      properties: {}
  OrchestrationLogRuleConditionEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log rule condition event.
      properties: {}
  OrchestrationLogTerminateEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log terminate event.
      properties: {}
  OrchestrationLogThrottleEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log throttle event.
      properties: {}
  OrchestrationLogTimerArmEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log timer arm event.
      properties: {}
  OrchestrationLogTimerUnarmEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log timer unarm event.
      properties: {}
  OrchestrationLogTransitionEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log transition event.
      properties: {}
  OrchestrationLogVariableChangeEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationLogEventRepresentation'}
    - type: object
      description: Orchestration log variable change.
      properties: {}
  OrchestrationMaxAggregationVariableValueInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationTemporalAggregationVariableValueInputRepresentation'}
    - type: object
      description: An orchestration variable value performing a maximum aggregation over time.
      properties: {}
  OrchestrationMinAggregationVariableValueInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationTemporalAggregationVariableValueInputRepresentation'}
    - type: object
      description: An orchestration variable value performing a minimum aggregation over time.
      properties: {}
  OrchestrationObjectPropertyFieldRepresentation:
    type: object
    description: Field representation of an object property that  can be referenced by the orchestration.
    properties: {}
  OrchestrationOutputActionInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationActionInputRepresentation'}
    - type: object
      description: An orchestration output action definition.
      properties:
        id: {description: Action ID., type: integer}
        isResponseIngested: {description: Indicates whether or not a response event is produced.,
          type: boolean}
        label: {description: Action label., type: string}
        responseEventName: {description: Response event name., type: string}
  OrchestrationOutputActionRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationActionRepresentation'}
    - type: object
      description: An orchestration output action definition.
      properties:
        id: {description: Action ID., type: integer}
        isResponseIngested: {description: Indicates whether or not a response event is produced.,
          type: boolean}
        label: {description: Action label., type: string}
        responseEventName: {description: Response event name., type: string}
  OrchestrationPropertiesInputRepresentation:
    type: object
    description: The properties of an orchestration.
    properties:
      restartOnError: {description: Creates a new orchestration instance for an incoming event with a matching instance key after an error occurs.,
        type: boolean}
      runOnce: {description: 'Ignores incoming events for exited or terminated orchestrations,
          to prevent additional instances from being created.', type: boolean}
  OrchestrationPropertiesRepresentation:
    type: object
    description: The properties of an orchestration.
    properties:
      restartOnError: {description: Creates a new orchestration instance for an incoming event with a matching instance key after an error occurs.,
        type: boolean}
      runOnce: {description: 'Ignores incoming events for exited or terminated orchestrations,
          to prevent additional instances from being created.', type: boolean}
  OrchestrationReferenceDataCollectionRepresentation:
    type: object
    description: List of all available reference data.
    properties: {}
  OrchestrationReferenceDataRepresentation:
    type: object
    description: Summary information about orchestration reference data.
    properties: {}
  OrchestrationReferenceObjectMetadataRepresentation:
    type: object
    description: Metadata for the object referenced in the orchestration definition.
    properties: {}
  OrchestrationResetVariableActionInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationActionInputRepresentation'}
    - type: object
      description: An action that resets the value of an orchestration variable.
      properties:
        variableId: {description: Variable ID., type: integer}
  OrchestrationResetVariableActionRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationActionRepresentation'}
    - type: object
      description: An action that resets the value of an orchestration variable.
      properties:
        variableId: {description: Variable ID., type: integer}
  OrchestrationResponseEventRepresentation:
    type: object
    description: A response events schema in the orchestration definition.
    properties: {}
  OrchestrationResponseEventSchemaRepresentation:
    type: object
    description: Response event metadata in the orchestration definition.
    properties: {}
  OrchestrationRuleCustomWhenRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenRepresentation'}
    - type: object
      description: A rule that is triggered at a specified time.
      properties: {}
  OrchestrationRuleInputRepresentation:
    type: object
    description: An orchestration rule.
    properties:
      actions:
        description: The actions taken when a rule is triggered.
        type: array
        items: {type: object}
      condition: {description: 'A condition evaluated when a rule is triggered, written
          as a Salesforce expression. The rule''s actions are executed if the condition
          evaluates to true.', type: string}
      description: {description: Rule description., type: string}
      id: {description: The integer value that uniquely identifies the rule., type: integer}
      throttle: {description: The throttling behavior applied to a rule., type: object}
      when: {description: A trigger that specifies when the rule executes., type: object}
  OrchestrationRuleRepresentation:
    type: object
    description: The rules defined for the orchestration.
    properties:
      actions:
        description: The actions taken when the rule is triggered.
        type: array
        items: {$ref: '#/definitions/OrchestrationActionRepresentation'}
      condition: {description: 'A condition that is evaluated when the rule is triggered,
          written as a Salesforce expression. The rule''s actions are executed if
          the condition evaluates to true.', type: string}
      description: {description: Rule description., type: string}
      id: {description: A unique identifier for the rule., type: integer}
      throttle: {description: The throttling behavior applied to the rule., $ref: '#/definitions/OrchestrationRuleThrottleRepresentation'}
      when: {description: The trigger for the rule that describes when it executes.,
        $ref: '#/definitions/OrchestrationRuleWhenRepresentation'}
  OrchestrationRuleSimpleWhenRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenRepresentation'}
    - type: object
      description: A when rule that has no parameters.
      properties: {}
  OrchestrationRuleTemporalWhenRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenRepresentation'}
    - type: object
      description: A rule that is triggered at a specified time.
      properties:
        value: {description: The when condition value., type: string}
  OrchestrationRuleThrottleInputRepresentation:
    type: object
    description: A description of the throttling behavior applied to a rule.
    properties:
      period: {description: The period over which throttling occurs., type: integer}
      times: {description: The maximum number of times per period that the rule can be triggered.,
        type: integer}
      unit:
        description: The value associated with the time period.
        type: string
        enum: [Days, Hours, Minutes, Months, Seconds, Weeks, Years]
  OrchestrationRuleThrottleRepresentation:
    type: object
    description: A description of the throttling behavior applied to a rule.
    properties:
      period: {description: The period over which throttling occurs., type: integer}
      times: {description: The maximum number of times per period that the rule can be triggered.,
        type: integer}
      unit:
        description: The time unit associated with the period.
        type: string
        enum: [Days, Hours, Minutes, Months, Seconds, Weeks, Years]
  OrchestrationRuleWhenAlwaysInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenInputRepresentation'}
    - type: object
      description: An always when rule.
      properties: {}
  OrchestrationRuleWhenCustomInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenInputRepresentation'}
    - type: object
      description: A rule that is triggered at a specified time.
      properties: {}
  OrchestrationRuleWhenDayInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenTemporalInputRepresentation'}
    - type: object
      description: A rule that is triggered at a specified time.
      properties: {}
  OrchestrationRuleWhenEventInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenInputRepresentation'}
    - type: object
      description: A rule that is triggered by an event.
      properties:
        eventSource: {description: The name of the event that triggers the rule.,
          type: string}
  OrchestrationRuleWhenEventRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenRepresentation'}
    - type: object
      description: A rule that is triggered by an event.
      properties:
        eventSource: {description: The name of the event that triggers the rule.,
          type: string}
  OrchestrationRuleWhenHourInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenTemporalInputRepresentation'}
    - type: object
      description: A rule that is triggered at a specified time.
      properties: {}
  OrchestrationRuleWhenImmediatelyInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenInputRepresentation'}
    - type: object
      description: A rule that is triggered immediately when the specified event occurs.
      properties: {}
  OrchestrationRuleWhenInputRepresentation:
    type: object
    description: A description of when a rule is triggered.
    properties:
      type:
        description: The specified type of trigger for the rule.
        type: string
        enum: [Always, Custom, Day, Event, Hour, Immediately, Minute, Second]
  OrchestrationRuleWhenMinuteInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenTemporalInputRepresentation'}
    - type: object
      description: A rule that is triggered at a specified time.
      properties: {}
  OrchestrationRuleWhenRepresentation:
    type: object
    description: A description of when a rule is triggered.
    properties:
      type:
        description: The type of rule trigger described.
        type: string
        enum: [Always, Custom, Day, Event, Hour, Immediately, Minute, Second]
  OrchestrationRuleWhenSecondInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenTemporalInputRepresentation'}
    - type: object
      description: A rule that is triggered at a specified time.
      properties: {}
  OrchestrationRuleWhenTemporalInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationRuleWhenInputRepresentation'}
    - type: object
      description: A rule that is triggered at a specified time.
      properties:
        value: {description: The value associated with the time period., type: string}
  OrchestrationRuntimeActivityInfoRepresentation:
    allOf:
    - {$ref: '#/definitions/ActivityInfoRepresentation'}
    - type: object
      description: Detailed instance information.
      properties: {}
  OrchestrationSalesforceOutputActionFieldInputRepresentation:
    type: object
    description: A field descriptor that may act as a filter or value assignment for the Salesforce output action.
    properties:
      field: {description: The API name of the field., type: string}
      value: {description: The field value., type: string}
  OrchestrationSalesforceOutputActionFieldRepresentation:
    type: object
    description: A field descriptor that may act as a filter or value assignment for the Salesforce output action.
    properties:
      field: {description: The API name of the field., type: string}
      value: {description: The field value., type: string}
  OrchestrationSalesforceOutputActionInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationOutputActionInputRepresentation'}
    - type: object
      description: The definition of an orchestration action on a Salesforce object.
      properties:
        fieldAssignments:
          description: The details of the assignment field values for create and edit actions.
          type: array
          items: {type: object}
        name:
          description: The action type name.
          type: string
          enum: [Create, Delete, Edit, Read]
        recordFilters:
          description: The filters that identify the record that the action operates on.
          type: array
          items: {type: object}
        salesforceObjectApiName: {description: The filters that identify the record that the action operates on.,
          type: string}
  OrchestrationSalesforceOutputActionRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationOutputActionRepresentation'}
    - type: object
      description: The definition of an orchestration action on a Salesforce object.
      properties:
        fieldAssignments:
          description: The details of the assignment field values for create and edit actions.
          type: array
          items: {$ref: '#/definitions/OrchestrationSalesforceOutputActionFieldRepresentation'}
        name:
          description: The action type name.
          type: string
          enum: [Create, Delete, Edit, Read]
        recordFilters:
          description: The filters that identify the record that the action operates on.
          type: array
          items: {$ref: '#/definitions/OrchestrationSalesforceOutputActionFieldRepresentation'}
        salesforceObjectApiName: {description: The API name of the Salesforce object that this action operates on.,
          type: string}
  OrchestrationSobjectReferenceCollectionRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractCollectionRepresentation'}
    - type: object
      description: A list of sobjects that can be referenced by the orchestration.
      properties: {}
  OrchestrationSobjectReferenceRepresentation:
    type: object
    description: A Salesforce IoT orchestration reference object.
    properties: {}
  OrchestrationStateCollectionRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractCollectionRepresentation'}
    - type: object
      description: A list of Salesforce IoT orchestration states.
      properties: {}
  OrchestrationStateInputRepresentation:
    type: object
    description: An orchestration state description.
    properties:
      id: {description: The unique identifier for the state., type: integer}
      initial: {description: 'True, if this is the initial state.', type: boolean}
      name: {description: The state name., type: string}
      rules:
        description: The rules that are associated with this state.
        type: array
        items: {type: object}
  OrchestrationStateReferenceRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractOrchestrationStateRepresentation'}
    - type: object
      description: A reference to an orchestration state.
      properties: {}
  OrchestrationStateRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractOrchestrationStateRepresentation'}
    - type: object
      description: A description of an orchestration state.
      properties:
        initial: {description: 'True, if this is the initial state.', type: boolean}
        rules:
          description: The rules that are associated with this state.
          type: array
          items: {$ref: '#/definitions/OrchestrationRuleRepresentation'}
  OrchestrationStateSummaryRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractResourceRepresentation'}
    - type: object
      description: Summary information about an orchestration state.
      properties: {}
  OrchestrationSumAggregationVariableValueInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationTemporalAggregationVariableValueInputRepresentation'}
    - type: object
      description: An orchestration variable value performing a sum aggregation over time.
      properties: {}
  OrchestrationSummaryRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractOrchestrationRepresentation'}
    - type: object
      description: Summary information about an orchestration.
      properties: {}
  OrchestrationTemporalAggregationVariableValueInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationVariableValueInputRepresentation'}
    - type: object
      description: An orchestration variable value performing an aggregation over time.
      properties:
        eventField: {description: The event field for the aggregation., type: string}
        temporalWindow: {description: The temporal window for the aggregation., type: string}
  OrchestrationTemporalAggregationVariableValueRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationVariableValueRepresentation'}
    - type: object
      description: An orchestration variable value performing an aggregation over time.
      properties:
        eventField: {description: The event field for the aggregation., type: string}
        temporalWindow: {description: The temporal window for the aggregation., type: string}
  OrchestrationTerminateActionInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationActionInputRepresentation'}
    - type: object
      description: An action that terminates an orchestration.
      properties:
        exitCode:
          description: The orchestration termination type.
          type: string
          enum: [Expired, Failure, NotApplicable, Success]
  OrchestrationTerminateActionRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationActionRepresentation'}
    - type: object
      description: An action that terminates an orchestration.
      properties:
        exitCode:
          description: The orchestration termination type.
          type: string
          enum: [Expired, Failure, NotApplicable, Success]
  OrchestrationTrackerCollectionRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractCollectionRepresentation'}
    - type: object
      description: A list of orchestration trackers.
      properties: {}
  OrchestrationTrackerInputRepresentation:
    type: object
    description: Representation of the tracker that you want to create.
    properties: {}
  OrchestrationTrackerPatchInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationTrackerInputRepresentation'}
    - type: object
      description: Input representation of the tracker for PATCH requests.
      properties: {}
  OrchestrationTrackerPostInputRepresentation:
    allOf:
    - {$ref: '#/definitions/OrchestrationTrackerInputRepresentation'}
    - type: object
      description: Input representation of the tracker for POST requests
      properties: {}
  OrchestrationTrackerRepresentation:
    type: object
    description: Orchestration tracker information.
    properties: {}
  OrchestrationTransitionCountCollectionRepresentation:
    type: object
    description: A list of orchestration transition counts.
    properties:
      metrics:
        description: A list of orchestration transition counts.
        type: array
        items: {$ref: '#/definitions/OrchestrationTransitionCountRepresentation'}
  OrchestrationTransitionCountRepresentation:
    type: object
    description: Orchestration transition count.
    properties:
      action: {description: Transition action., type: string}
      count: {description: Count., type: integer, format: int64}
      fromStateId: {description: From state ID., type: integer}
      toStateId: {description: To state ID., type: integer}
  OrchestrationUsageCollectionRepresentation:
    allOf:
    - {$ref: '#/definitions/AbstractCollectionRepresentation'}
    - type: object
      description: A log of orchestration-level usage.
      properties:
        orchestrationUsages:
          description: Orchestration usage information.
          type: array
          items: {$ref: '#/definitions/OrchestrationUsageRepresentation'}
  OrchestrationUsageRepresentation:
    type: object
    description: Current orchestration-level usage.
    properties:
      activationStatus: {description: Orchestration activation status., type: string}
      instanceCount: {description: Current instance count for the orchestration.,
        type: integer}
      label: {description: Orchestration name., type: string}
      orchestrationId: {description: Orchestration ID., type: string}
      orchestrationUrl: {description: Orchestration URL., type: string}
      processedEventCount: {description: Number of events processed by the orchestration in the last 24 hours.,
        type: integer, format: int64}
      rejectedEventCount: {description: Number of events rejected by the orchestration.,
        type: integer, format: int64}
  OrchestrationValidationMessageRepresentation:
    type: object
    description: A message generated while validating the orchestration definition.
    properties:
      location: {description: The location of the error., type: string}
      severity:
        description: The severity of the issue.
        type: string
        enum: [Error, Warning]
      text: {description: The message text., type: string}
  OrchestrationValidationMessagesRepresentation:
    type: object
    description: A list of messages generated while validating the orchestration.
    properties:
      messages:
        description: A list of messages generated while validating the orchestration.
        type: array
        items: {$ref: '#/definitions/OrchestrationValidationMessageRepresentation'}
  OrchestrationVariableInputRepresentation:
    type: object
    description: The orchestration variable definition.
    properties:
      condition: {description: The Salesforce expression that is evaluated to determine if the variable should be updated.,
        type: string}
      dataType:
        description: The data type of the variable.
        type: string
        enum: [Boolean, Date, DateTime, Number, String]
      description: {description: The description of the variable., type: string}
      eventSource: {description: The event source of the variable., type: string}
      id: {description: Variable ID., type: integer}
      initialValue: {description: The Salesforce expression that defines the initial value of this variable.,
        type: string}
      name: {description: Variable name., type: string}
      value: {description: The method used to calculate a value for this variable.,
        type: object}
  OrchestrationVariableRepresentation:
    type: object
    description: The orchestration variable description.
    properties:
      condition: {description: The Salesforce expression evaluated to determine if the variable should be updated.,
        type: string}
      dataType:
        description: The data type of the variable.
        type: string
        enum: [Boolean, Date, DateTime, Number, String]
      description: {description: The orchestration variable description., type: string}
      eventSource: {description: The event source for the variable., type: string}
      id: {description: The variable ID., type: integer}
      initialValue: {description: The Salesforce expression that defines the initial value of this variable.,
        type: string}
      name: {description: Variable name., type: string}
      value: {description: The method used to calculate a value for the variable.,
        $ref: '#/definitions/OrchestrationVariableValueRepresentation'}
  OrchestrationVariableValueInputRepresentation:
    type: object
    description: The orchestration variable value.
    properties:
      type:
        description: The type of function used to calculate the variable value.
        type: string
        enum: [Avg, ConsecutiveDuration, Count, Custom, Max, Min, Sum]
  OrchestrationVariableValueRepresentation:
    type: object
    description: The orchestration variable value.
    properties:
      type:
        description: The variable value type.
        type: string
        enum: [Avg, ConsecutiveDuration, Count, Custom, Max, Min, Sum]
  PlatformEventCollectionRepresentation:
    type: object
    description: The platform event payload specification.
    properties: {}
  PlatformEventResponseRepresentation:
    type: object
    description: Response on sending platform event.
    properties: {}
  UsageDetailRepresentation:
    type: object
    description: Current org-level usage information.
    properties:
      allocations: {description: Current org-level allocations., $ref: '#/definitions/AllocationsRepresentation'}
      eventUsage: {description: Current org-level event usage., $ref: '#/definitions/EventUsageRepresentation'}
      orchestrationUsageUrl: {description: URL for current orchestration usage., type: string}
  VariableRepresentation:
    type: object
    description: Representation of a variable with name, value and type.
    properties:
      dataType:
        description: The datatype of the variable.
        type: string
        enum: [Boolean, Date, DateTime, Number, String]
      name: {description: The variable name., type: string}
      value: {description: The variable value., type: object}






